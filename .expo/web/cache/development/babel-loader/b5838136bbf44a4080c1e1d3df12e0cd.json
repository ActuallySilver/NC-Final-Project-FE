{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Camera } from \"expo-camera\";\nimport * as MediaLibrary from \"expo-media-library\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CameraPage() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, CameraStatus, _await$MediaLibrary$r, CameraRollStatus;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              CameraStatus = _await$Camera$request.status;\n\n              if (!(CameraStatus === \"granted\")) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(MediaLibrary.requestPermissionsAsync());\n\n            case 7:\n              _await$MediaLibrary$r = _context.sent;\n              CameraRollStatus = _await$MediaLibrary$r.status;\n              setHasPermission(CameraRollStatus === \"granted\");\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(View, {});\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  function snapPhoto() {\n    var options;\n    return _regeneratorRuntime.async(function snapPhoto$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!this.camera) {\n              _context3.next = 4;\n              break;\n            }\n\n            options = {\n              quality: 1,\n              base64: true,\n              fixOrientation: true,\n              exif: true\n            };\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(this.camera.takePictureAsync(options).then(function _callee2(photo) {\n              var uri, base64;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      photo.exif.Orientation = 1;\n                      uri = photo.uri, base64 = photo.base64;\n                      console.log(base64.length);\n                      console.log(uri);\n                      MediaLibrary.saveToLibraryAsync(uri);\n\n                    case 5:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this, null, Promise);\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(Camera, {\n      style: styles.camera,\n      type: type,\n      ref: function ref(_ref) {\n        _this.camera = _ref;\n      },\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsxs(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n          },\n          children: [_jsx(Text, {\n            style: styles.text,\n            children: \" Flip \"\n          }), _jsx(Button, {\n            title: \"Take picture\",\n            onPress: function onPress() {\n              snapPhoto();\n            }\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/Jason/Documents/NorthCoders/THE project/frontend/screens/CameraPage.jsx"],"names":["Camera","MediaLibrary","useEffect","useState","CameraPage","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestCameraPermissionsAsync","CameraStatus","status","requestPermissionsAsync","CameraRollStatus","snapPhoto","camera","options","quality","base64","fixOrientation","exif","takePictureAsync","then","photo","Orientation","uri","console","log","length","saveToLibraryAsync","styles","container","ref","buttonContainer","button","front","text"],"mappings":";;;;;;;;;AACA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,6BAApC;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,kBAA0CD,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOE,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBH,QAAQ,CAACH,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwCF,MAAM,CAACY,6BAAP,EADxC;;AAAA;AAAA;AACiBC,cAAAA,YADjB,yBACSC,MADT;;AAAA,oBAEKD,YAAY,KAAK,SAFtB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAG8CZ,YAAY,CAACc,uBAAb,EAH9C;;AAAA;AAAA;AAGmBC,cAAAA,gBAHnB,yBAGWF,MAHX;AAIGR,cAAAA,gBAAgB,CAACU,gBAAgB,KAAK,SAAtB,CAAhB;;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIX,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,KAAC,IAAD,KAAP;AACD;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACD;;AACD,WAAeY,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACM,KAAKC,MADX;AAAA;AAAA;AAAA;;AAEUC,YAAAA,OAFV,GAEoB;AAAEC,cAAAA,OAAO,EAAE,CAAX;AAAcC,cAAAA,MAAM,EAAE,IAAtB;AAA4BC,cAAAA,cAAc,EAAE,IAA5C;AAAkDC,cAAAA,IAAI,EAAE;AAAxD,aAFpB;AAAA;AAAA,6CAGU,KAAKL,MAAL,CAAYM,gBAAZ,CAA6BL,OAA7B,EAAsCM,IAAtC,CAA2C,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/CA,sBAAAA,KAAK,CAACH,IAAN,CAAWI,WAAX,GAAyB,CAAzB;AACQC,sBAAAA,GAFuC,GAEvBF,KAFuB,CAEvCE,GAFuC,EAElCP,MAFkC,GAEvBK,KAFuB,CAElCL,MAFkC;AAG/CQ,sBAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,MAAnB;AAeAF,sBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA3B,sBAAAA,YAAY,CAAC+B,kBAAb,CAAgCJ,GAAhC;;AAnB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3C,CAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BA,SACE,KAAC,YAAD;AAAc,IAAA,KAAK,EAAEK,MAAM,CAACC,SAA5B;AAAA,cACE,KAAC,MAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACf,MADhB;AAEE,MAAA,IAAI,EAAER,IAFR;AAKE,MAAA,GAAG,EAAE,aAACyB,IAAD,EAAS;AACZ,QAAA,KAAI,CAACjB,MAAL,GAAciB,IAAd;AACD,OAPH;AAAA,gBASE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,eAApB;AAAA,kBACE,MAAC,gBAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACI,MADhB;AAEE,UAAA,OAAO,EAAE,mBAAM;AACb1B,YAAAA,OAAO,CAACD,IAAI,KAAKV,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GAAsCT,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsB8B,KAA5D,GAAoEtC,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBC,IAA3F,CAAP;AACD,WAJH;AAAA,qBAME,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEwB,MAAM,CAACM,IAApB;AAAA;AAAA,YANF,EAOE,KAAC,MAAD;AACE,YAAA,KAAK,EAAC,cADR;AAEE,YAAA,OAAO,EAAE,mBAAM;AACbtB,cAAAA,SAAS;AACV;AAJH,YAPF;AAAA;AADF;AATF;AADF,IADF;AA8BD","sourcesContent":["import { StyleSheet, Text, SafeAreaView, View, TouchableOpacity, Dimensions, Button } from \"react-native\";\r\nimport { Camera } from \"expo-camera\";\r\nimport * as MediaLibrary from \"expo-media-library\";\r\n\r\nimport { useEffect, useState } from \"react/cjs/react.development\";\r\n\r\nexport default function CameraPage() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status: CameraStatus } = await Camera.requestCameraPermissionsAsync();\r\n      if (CameraStatus === \"granted\") {\r\n        const { status: CameraRollStatus } = await MediaLibrary.requestPermissionsAsync();\r\n        setHasPermission(CameraRollStatus === \"granted\");\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (hasPermission === null) {\r\n    return <View />;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  async function snapPhoto() {\r\n    if (this.camera) {\r\n      const options = { quality: 1, base64: true, fixOrientation: true, exif: true };\r\n      await this.camera.takePictureAsync(options).then(async (photo) => {\r\n        photo.exif.Orientation = 1;\r\n        const { uri, base64 } = photo;\r\n        console.log(base64.length);\r\n        // imagekit.upload(\r\n        //   {\r\n        //     file: base64, //required\r\n        //     fileName: \"randomPhoto.jpeg\", //required\r\n        //     tags: [\"tag1\", \"tag2\"],\r\n        //   },\r\n        //   function (error, result) {\r\n        //     if (error) console.log(error);\r\n        //     else console.log(result);\r\n        //   }\r\n        // );\r\n        //If you don't want to save the image to the phone, it is stored in a temp folder\r\n        //you can access the file with the URI defined above\r\n        //remove below line to not save to phone\r\n        console.log(uri);\r\n        MediaLibrary.saveToLibraryAsync(uri);\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Camera\r\n        style={styles.camera}\r\n        type={type}\r\n        //ref causes an error when working with live code so you will have to restart your connection to the app\r\n        //Not yet found an alternative that works\r\n        ref={(ref) => {\r\n          this.camera = ref;\r\n        }}\r\n      >\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\r\n            }}\r\n          >\r\n            <Text style={styles.text}> Flip </Text>\r\n            <Button\r\n              title=\"Take picture\"\r\n              onPress={() => {\r\n                snapPhoto();\r\n              }}\r\n            ></Button>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Camera>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}